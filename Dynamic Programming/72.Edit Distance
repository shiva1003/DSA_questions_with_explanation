class Solution:
    def minDistance(self, word1: str, word2: str) -> int:
        m = len(word1) 
        n = len(word2)
        # initializing row n col with 0 in dp for making table
        dp = [[0 for x in range (n+1)] for x in range(m+1)]
        # Loops for both rows and cols 
        for i in range(m+1):
            for j in range(n+1):
                if i == 0:#Put the value of j in table when i is 0
                    dp[i][j] = j
                elif j == 0:
                    dp[i][j] = i #Put the value of i when j is 0
                elif word1[i-1] == word2[j-1]:#when there is a match b/w
                    dp[i][j] = dp[i-1][j-1]# elements return diagonal
                else:
                    #Take minimum from left, upper and diagonal and add 1
                    dp[i][j] = 1 + min(dp[i][j-1], dp[i-1][j-1], dp[i-1][j])
        return dp[m][n]

    
