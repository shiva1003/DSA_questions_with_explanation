class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        n=len(nums)
        s=sum(nums)
        target=s//2
        if s%2!=0:
            return False #create dp for tabulation method
        dp=[[False for i in range(target)+1)]for j in range(len(nums)+1)]
        for i in range(n+1):
            dp[i][0]=True #initialization
        for i in range(1,n+1):
            for j in range(1,target+1):
                if nums[i-1]>j: #when target is less than taken
                    dp[i][j]=dp[i-1][j]          
                else: #when target is more than taken
                    dp[i][j]=dp[i-1][j-nums[i-1]] or dp[i-1][j]
        return dp[n][target]
