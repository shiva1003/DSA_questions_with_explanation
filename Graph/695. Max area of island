class Solution:
    def dfs(x,y,grid):
        directions=[[1,0],[-1,0],[0,1],[0,-1]]
        row=len(grid)
        col=len(grid[0])
        if(x<0 or x>row-1 or y<0 or y>col-1 or grid[x][y]!=1):
            return 0
        c=1
        grid[x][y]=2
        for direction in directions:
            newx = x+direction[0]
            newy = direction[1]+y
            c += Solution.dfs(newx,newy,grid)
        return c

    def maxAreaOfIsland(self, grid: List[List[int]]) -> int:
        maxcount=0
        for i in range(len(grid)):
            count=0
            for j in range(len(grid[0])):     
                if(grid[i][j]==1):
                    count = Solution.dfs(i,j,grid)
                    maxcount= max(maxcount,count)
        return maxcount
                  
